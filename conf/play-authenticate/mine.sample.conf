#####################################################################################
#
# My play-authenticate settings
#
#####################################################################################

play-authenticate {

    # If set to true, account merging is enabled, if set to false its disabled and accounts will never prompted to be merged
    # defaults to true can be false
    accountMergeEnabled=false
    
    # if this is set to true, accounts are automatically linked
    # (e.g. if a user is logged in and uses a different authentication provider
    # which has NOT yet been registered to another user, this newly used authentication
    # provider gets added to the current local user
    # Handle setting this to true with care
    # If set to false, your resolver must not return null for askLink()
    # defaults to false
    accountAutoLink=true

    ## Settings for the google-based authentication provider
    ## if you are not using it, you can remove this portion of the config file
    ## and remove the Google provider from conf/play.plugins
    google {
      redirectUri {
        # Whether the redirect URI scheme should be HTTP or HTTPS (HTTP by default)
        secure=false

        # You can use this setting to override the automatic detection
        # of the host used for the redirect URI (helpful if your service is running behind a CDN for example)
        # host=yourdomain.com
      }

      # Google credentials
      # These are mandatory for using OAuth and need to be provided by you,
      # if you want to use Google as an authentication provider.
      # Get them here: https://code.google.com/apis/console
      clientId=""
      clientId=${?APPCIVIST_GOOGLE_CLIENT_ID}
      clientSecret=""
      clientSecret=${?APPCIVIST_GOOGLE_CLIENT_SECRET}
    }

    # Facebook credentials
    # Get them here: https://developers.facebook.com/apps
    # Remove leading '#' after entering
    facebook {
      redirectUri {
        # Whether the redirect URI scheme should be HTTP or HTTPS (HTTP by default)
        secure=false

        # You can use this setting to override the automatic detection
        # of the host used for the redirect URI (helpful if your service is running behind a CDN for example)
        # host=yourdomain.com
      }

      clientId=""
      clientId=${?APPCIVIST_FACEBOOK_CLIENT_ID}
      clientSecret=""
      clientSecret=${?APPCIVIST_FACEBOOK_CLIENT_SECRET}
    }
    
    ## Settings for the password-based authentication provider
    ## if you are not using it, you can remove this portion of the config file
    password {
        mail {
            verificationLink {
                # Whether the verification link will be HTTPS
                secure=false
            }
            passwordResetLink {
                # Whether the password reset link will be HTTPS
                secure=false
            }
           from {
                # Mailing from address
                email="youremail@example.com"
                email=${?APPCIVIST_MAIL}
    
                # Mailing name
                name="AppCivist@Socialappslab"
                name=${?APPCIVIST_MAIL_NAME}
            }
            # Pause between email jobs (in seconds)
            delay=1
        }
        # Whether to directly log in after the password reset (true)
       # or send the user to the login page (false)
       loginAfterPasswordReset=true
    }
    ldap {
      realm="realm"
    }
}